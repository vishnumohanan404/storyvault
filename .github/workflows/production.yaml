name: 🚀 Production Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  ci:
    name: ʦ Type-check, link and test
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'chore(release):') }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: ⎔ Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📥 Install dependencies
        uses: bahmutov/npm-install@v1

      - name: ʦ Type Check
        run: npm run type-check --if-present

      - name: 🔬 Lint
        run: npm run lint

      - name: ⚡ Test
        run: npm run test -- --run

  release:
    name: 🔖 Version and Release
    runs-on: ubuntu-latest
    if:
      ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' &&
      !contains(github.event.head_commit.message, 'chore(release):') }}
    needs: ci
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}
      - name: ⎔ Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📥 Install dependencies
        uses: bahmutov/npm-install@v1

      - name: 🔍 Check for changesets
        id: check-changesets
        run: |
          # Check if there are unreleased changesets that will actually cause version bumps
          CHANGESET_STATUS=$(npx changeset status --verbose 2>&1)
          echo "$CHANGESET_STATUS"

          if echo "$CHANGESET_STATUS" | grep -q "No changesets present"; then
            echo "has-changesets=false" >> $GITHUB_OUTPUT
            echo "📝 No changesets found - skipping release"
          elif echo "$CHANGESET_STATUS" | grep -q "NO packages to be bumped"; then
            echo "has-changesets=false" >> $GITHUB_OUTPUT
            echo "📝 No packages will be bumped - skipping release"
          else
            echo "has-changesets=true" >> $GITHUB_OUTPUT
            echo "📝 Changesets found that will bump versions - proceeding with release"
          fi

      - name: 🏷️ Process changesets and bump version
        if: steps.check-changesets.outputs.has-changesets == 'true'
        id: version
        env:
          HUSKY: 0
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          echo "📦 Before changeset version:"
          cat package.json | grep '"version"'

          # Run changeset version and capture output
          CHANGESET_OUTPUT=$(npx changeset version 2>&1)
          echo "$CHANGESET_OUTPUT"

          echo "📦 After changeset version:"
          cat package.json | grep '"version"'

          # Check if there are actually changes to commit
          if git diff --quiet && git diff --cached --quiet; then
            echo "📝 No changes were made by changeset version"
            echo "has-changes=false" >> $GITHUB_OUTPUT
          else
            echo "📝 Changes detected, proceeding with commit"
            echo "has-changes=true" >> $GITHUB_OUTPUT
            
            # Get the new version
            NEW_VERSION=$(node -p "require('./package.json').version")
            echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

            # Commit the version bump and changelog updates
            git add .
            git commit -m "chore(release): version bump to v$NEW_VERSION via changeset"
            git push
          fi

      - name: 🏷️ Create Git Tag
        if: |
          steps.check-changesets.outputs.has-changesets == 'true' &&
          steps.version.outputs.has-changes == 'true' &&
          steps.version.outputs.version
        run: |
          git tag v${{ steps.version.outputs.version }}
          git push origin v${{ steps.version.outputs.version }}

      - name: 📦 Create GitHub Release
        if: |
          steps.check-changesets.outputs.has-changesets == 'true' &&
          steps.version.outputs.has-changes == 'true' &&
          steps.version.outputs.version
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
